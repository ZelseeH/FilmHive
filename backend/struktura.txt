
-- üìå Filmy (Movies)
CREATE TABLE Movies (
MovieID INTEGER PRIMARY KEY AUTOINCREMENT,
Title TEXT NOT NULL,
ReleaseDate DATE NOT NULL, -- Konkretny dzie≈Ñ premiery
Description TEXT,
PosterURL TEXT
);

-- üìå Gatunki film√≥w (Genres)
CREATE TABLE Genres (
GenreID INTEGER PRIMARY KEY AUTOINCREMENT,
GenreName TEXT UNIQUE NOT NULL
);

-- üìå Po≈ÇƒÖczenie film√≥w i gatunk√≥w (MoviesGenres)
CREATE TABLE MoviesGenres (
MovieID INTEGER NOT NULL,
GenreID INTEGER NOT NULL,
PRIMARY KEY (MovieID, GenreID),
FOREIGN KEY (MovieID) REFERENCES Movies(MovieID),
FOREIGN KEY (GenreID) REFERENCES Genres(GenreID)
);

-- üìå U≈ºytkownicy (Users) z rolami
CREATE TABLE Users (
UserID INTEGER PRIMARY KEY AUTOINCREMENT,
Username TEXT UNIQUE NOT NULL,
Email TEXT UNIQUE NOT NULL,
PasswordHash TEXT NOT NULL,
Role INTEGER DEFAULT 3 CHECK (Role IN (1, 2, 3)), -- 1 = G≈Ç√≥wny Admin, 2 = Admin, 3 = U≈ºytkownik
RegistrationDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- üìå Oceny film√≥w (Ratings) ‚Äì u≈ºytkownik ocenia film od 0 do 10
CREATE TABLE Ratings (
RatingID INTEGER PRIMARY KEY AUTOINCREMENT,
UserID INTEGER NOT NULL,
MovieID INTEGER NOT NULL,
Rating INTEGER CHECK (Rating BETWEEN 0 AND 10) NOT NULL,
RatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (UserID) REFERENCES Users(UserID),
FOREIGN KEY (MovieID) REFERENCES Movies(MovieID),
UNIQUE(UserID, MovieID) -- Ka≈ºdy u≈ºytkownik mo≈ºe oceniƒá dany film tylko raz
);

-- üìå Komentarze (Comments) ‚Äì opinie u≈ºytkownik√≥w
CREATE TABLE Comments (
CommentID INTEGER PRIMARY KEY AUTOINCREMENT,
UserID INTEGER NOT NULL,
MovieID INTEGER NOT NULL,
CommentText TEXT NOT NULL,
CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (UserID) REFERENCES Users(UserID),
FOREIGN KEY (MovieID) REFERENCES Movies(MovieID)
);

-- üìå Ulubione filmy (FavoriteMovies) ‚Äì serduszko ‚ù§Ô∏è
CREATE TABLE FavoriteMovies (
UserID INTEGER NOT NULL,
MovieID INTEGER NOT NULL,
PRIMARY KEY (UserID, MovieID),
FOREIGN KEY (UserID) REFERENCES Users(UserID),
FOREIGN KEY (MovieID) REFERENCES Movies(MovieID)
);

-- üìå Chcƒô obejrzeƒá (Watchlist) ‚Äì lista film√≥w do obejrzenia ‚è≥
CREATE TABLE Watchlist (
UserID INTEGER NOT NULL,
MovieID INTEGER NOT NULL,
PRIMARY KEY (UserID, MovieID),
FOREIGN KEY (UserID) REFERENCES Users(UserID),
FOREIGN KEY (MovieID) REFERENCES Movies(MovieID)
);

-- üìå Aktorzy (Actors)
CREATE TABLE Actors (
ActorID INTEGER PRIMARY KEY AUTOINCREMENT,
ActorName TEXT UNIQUE NOT NULL,
BirthDate DATE,
BirthPlace TEXT,
Biography TEXT
);

-- üìå Po≈ÇƒÖczenie aktor√≥w i film√≥w (MovieActors)
CREATE TABLE MovieActors (
MovieID INTEGER NOT NULL,
ActorID INTEGER NOT NULL,
MovieRole TEXT,
PRIMARY KEY (MovieID, ActorID),
FOREIGN KEY (MovieID) REFERENCES Movies(MovieID),
FOREIGN KEY (ActorID) REFERENCES Actors(ActorID)
);

-- üìå Re≈ºyserzy (Directors)
CREATE TABLE Directors (
DirectorID INTEGER PRIMARY KEY AUTOINCREMENT,
DirectorName TEXT UNIQUE NOT NULL,
BirthDate DATE,
BirthPlace TEXT,
Biography TEXT
);

-- üìå Po≈ÇƒÖczenie re≈ºyser√≥w i film√≥w (MovieDirectors)
CREATE TABLE MovieDirectors (
MovieID INTEGER NOT NULL,
DirectorID INTEGER NOT NULL,
PRIMARY KEY (MovieID, DirectorID),
FOREIGN KEY (MovieID) REFERENCES Movies(MovieID),
FOREIGN KEY (DirectorID) REFERENCES Directors(DirectorID)
);

-- üìå Rekomendacje film√≥w (Recommendations) ‚Äì generowane przez algorytm
CREATE TABLE Recommendations (
RecommendationID INTEGER PRIMARY KEY AUTOINCREMENT,
UserID INTEGER NOT NULL,
MovieID INTEGER NOT NULL,
Score REAL CHECK (Score BETWEEN 0 AND 1), -- Pewno≈õƒá rekomendacji (np. 0.85 = 85%)
AlgorithmUsed TEXT, -- Jaki algorytm wygenerowa≈Ç rekomendacjƒô
CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (UserID) REFERENCES Users(UserID),
FOREIGN KEY (MovieID) REFERENCES Movies(MovieID)
);

-- üìå Tabela aktywno≈õci u≈ºytwkownik√≥w (Recommendations) 
CREATE TABLE UserActivityLogs (
    LogID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER NOT NULL,
    Activity TEXT NOT NULL,
    ActivityTimestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);